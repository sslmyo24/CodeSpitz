$pi: 3.14159265359;
@function atan2 ($y, $x) {
	@if $x > 0 { @return atan($y / $x); }
	@if $x < 0 {
		@if $y >= 0 { @return atan($y / $x) + $pi; }
		@if $y < 0 { @return atan($y / $x) - $pi; }
	}
	@if $x == 0 {
		@if $y > 0 { @return $pi / 2; }
		@if $y < 0 { @return -$pi / 2; }
	}
	@return atan($y / $x);
}

@mixin face ($w, $h, $x, $y, $z, $rx, $ry, $rz, $tx, $ty) {
	width:#{$w}px;
	height:#{$h}px;
	margin-top:-#{$h/2}px;
	margin-left:-#{$w/2}px;
	transform:translate3d(#{$x}px, #{$y}px,#{$z}px) rotateX(#{$rx}rad) rotateY(#{$ry}rad) rotateZ(#{$rz}rad);
	background-position:#{$tx}px #{$ty}px;
}

.mesh {
	position:absolute;left:50%;top:50%;
	transform-style:preserve-3d;
}
.mesh > div {
	position:absolute;transform-style:preserve-3d;
	background-image:url('https://keithclark.co.uk/labs/css-fps/drum2.png');background-visibility:hidden;
}
.mesh > .top {
	@include face(100, 100, 0, -98, 0, $pi/2, 0, 0, 0, 100);
}
.mesh > .bottom {
	@include face(100, 100, 0, 98, 0, -$pi/2, 0, 0, 0, 100);
}

$r:100;$height:196;$sides:20;
$sideAngle:$pi / 2 / $sides;
$sideLen:$r * tan($pi/$sides);
$w:$sideLen + 1;

@for $i from 0 through $sides {
	$x:sin($sideAngle * $i) * $r / 2;
	$z:cos($sideAngle * $i) * $r / 2;
	$ry:atan2($x, $z);
	.mesh > div:nth-child(#{$i}) {
		@include face($w, $height, $x, 0, $z, 0, $ry, 0, -$sideLen * $i, 0);
	}
}